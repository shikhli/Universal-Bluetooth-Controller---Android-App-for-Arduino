// Generated by view binder compiler. Do not edit!
package zakirshikhli.ble_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import zakirshikhli.ble_app.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final AppCompatTextView appInfo;

  @NonNull
  public final AppCompatButton buttonBLE;

  @NonNull
  public final AppCompatButton buttonClassic;

  @NonNull
  public final LinearLayout buttonsMm;

  @NonNull
  public final ImageButton emailButton;

  @NonNull
  public final RelativeLayout fragment;

  @NonNull
  public final ImageButton helpButton;

  @NonNull
  public final AppCompatButton helpCloseButton;

  @NonNull
  public final ConstraintLayout helpPanel;

  @NonNull
  public final TextView helpPanelLabel;

  @NonNull
  public final TextView helpText;

  @NonNull
  public final ImageButton langButton;

  @NonNull
  public final ConstraintLayout mainMenuContainer;

  @NonNull
  public final ImageButton quitButton;

  @NonNull
  public final ImageButton shareButton;

  @NonNull
  public final AppCompatImageView titleImage;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull AppCompatTextView appInfo,
      @NonNull AppCompatButton buttonBLE, @NonNull AppCompatButton buttonClassic,
      @NonNull LinearLayout buttonsMm, @NonNull ImageButton emailButton,
      @NonNull RelativeLayout fragment, @NonNull ImageButton helpButton,
      @NonNull AppCompatButton helpCloseButton, @NonNull ConstraintLayout helpPanel,
      @NonNull TextView helpPanelLabel, @NonNull TextView helpText, @NonNull ImageButton langButton,
      @NonNull ConstraintLayout mainMenuContainer, @NonNull ImageButton quitButton,
      @NonNull ImageButton shareButton, @NonNull AppCompatImageView titleImage,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.appInfo = appInfo;
    this.buttonBLE = buttonBLE;
    this.buttonClassic = buttonClassic;
    this.buttonsMm = buttonsMm;
    this.emailButton = emailButton;
    this.fragment = fragment;
    this.helpButton = helpButton;
    this.helpCloseButton = helpCloseButton;
    this.helpPanel = helpPanel;
    this.helpPanelLabel = helpPanelLabel;
    this.helpText = helpText;
    this.langButton = langButton;
    this.mainMenuContainer = mainMenuContainer;
    this.quitButton = quitButton;
    this.shareButton = shareButton;
    this.titleImage = titleImage;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.app_info;
      AppCompatTextView appInfo = ViewBindings.findChildViewById(rootView, id);
      if (appInfo == null) {
        break missingId;
      }

      id = R.id.buttonBLE;
      AppCompatButton buttonBLE = ViewBindings.findChildViewById(rootView, id);
      if (buttonBLE == null) {
        break missingId;
      }

      id = R.id.buttonClassic;
      AppCompatButton buttonClassic = ViewBindings.findChildViewById(rootView, id);
      if (buttonClassic == null) {
        break missingId;
      }

      id = R.id.buttons_mm;
      LinearLayout buttonsMm = ViewBindings.findChildViewById(rootView, id);
      if (buttonsMm == null) {
        break missingId;
      }

      id = R.id.emailButton;
      ImageButton emailButton = ViewBindings.findChildViewById(rootView, id);
      if (emailButton == null) {
        break missingId;
      }

      id = R.id.fragment;
      RelativeLayout fragment = ViewBindings.findChildViewById(rootView, id);
      if (fragment == null) {
        break missingId;
      }

      id = R.id.help_button;
      ImageButton helpButton = ViewBindings.findChildViewById(rootView, id);
      if (helpButton == null) {
        break missingId;
      }

      id = R.id.helpCloseButton;
      AppCompatButton helpCloseButton = ViewBindings.findChildViewById(rootView, id);
      if (helpCloseButton == null) {
        break missingId;
      }

      id = R.id.helpPanel;
      ConstraintLayout helpPanel = ViewBindings.findChildViewById(rootView, id);
      if (helpPanel == null) {
        break missingId;
      }

      id = R.id.helpPanelLabel;
      TextView helpPanelLabel = ViewBindings.findChildViewById(rootView, id);
      if (helpPanelLabel == null) {
        break missingId;
      }

      id = R.id.helpText;
      TextView helpText = ViewBindings.findChildViewById(rootView, id);
      if (helpText == null) {
        break missingId;
      }

      id = R.id.lang_button;
      ImageButton langButton = ViewBindings.findChildViewById(rootView, id);
      if (langButton == null) {
        break missingId;
      }

      id = R.id.mainMenuContainer;
      ConstraintLayout mainMenuContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainMenuContainer == null) {
        break missingId;
      }

      id = R.id.quitButton;
      ImageButton quitButton = ViewBindings.findChildViewById(rootView, id);
      if (quitButton == null) {
        break missingId;
      }

      id = R.id.shareButton;
      ImageButton shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.title_image;
      AppCompatImageView titleImage = ViewBindings.findChildViewById(rootView, id);
      if (titleImage == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, appBarLayout, appInfo, buttonBLE,
          buttonClassic, buttonsMm, emailButton, fragment, helpButton, helpCloseButton, helpPanel,
          helpPanelLabel, helpText, langButton, mainMenuContainer, quitButton, shareButton,
          titleImage, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

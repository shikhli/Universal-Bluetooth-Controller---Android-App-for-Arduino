// Generated by view binder compiler. Do not edit!
package zakirshikhli.ble_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatSeekBar;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import zakirshikhli.ble_app.R;

public final class FragmentControllerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout buttonsCont;

  @NonNull
  public final AppCompatTextView connStatus;

  @NonNull
  public final ConstraintLayout connectionStatusParent;

  @NonNull
  public final SwitchCompat highSpeedSwitch;

  @NonNull
  public final AppCompatImageView indicatorCon;

  @NonNull
  public final LinearLayoutCompat joysticksNormal;

  @NonNull
  public final LinearLayoutCompat joysticksTank;

  @NonNull
  public final SwitchCompat ledSwitch;

  @NonNull
  public final ImageButton restartButton;

  @NonNull
  public final SwitchCompat reverseSwitch;

  @NonNull
  public final AppCompatSeekBar sliderDir;

  @NonNull
  public final AppCompatSeekBar sliderLeft;

  @NonNull
  public final AppCompatSeekBar sliderMotor;

  @NonNull
  public final AppCompatSeekBar sliderRight;

  @NonNull
  public final SwitchCompat tankModeSwitch;

  private FragmentControllerBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout buttonsCont, @NonNull AppCompatTextView connStatus,
      @NonNull ConstraintLayout connectionStatusParent, @NonNull SwitchCompat highSpeedSwitch,
      @NonNull AppCompatImageView indicatorCon, @NonNull LinearLayoutCompat joysticksNormal,
      @NonNull LinearLayoutCompat joysticksTank, @NonNull SwitchCompat ledSwitch,
      @NonNull ImageButton restartButton, @NonNull SwitchCompat reverseSwitch,
      @NonNull AppCompatSeekBar sliderDir, @NonNull AppCompatSeekBar sliderLeft,
      @NonNull AppCompatSeekBar sliderMotor, @NonNull AppCompatSeekBar sliderRight,
      @NonNull SwitchCompat tankModeSwitch) {
    this.rootView = rootView;
    this.buttonsCont = buttonsCont;
    this.connStatus = connStatus;
    this.connectionStatusParent = connectionStatusParent;
    this.highSpeedSwitch = highSpeedSwitch;
    this.indicatorCon = indicatorCon;
    this.joysticksNormal = joysticksNormal;
    this.joysticksTank = joysticksTank;
    this.ledSwitch = ledSwitch;
    this.restartButton = restartButton;
    this.reverseSwitch = reverseSwitch;
    this.sliderDir = sliderDir;
    this.sliderLeft = sliderLeft;
    this.sliderMotor = sliderMotor;
    this.sliderRight = sliderRight;
    this.tankModeSwitch = tankModeSwitch;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentControllerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentControllerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_controller, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentControllerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttons_cont;
      LinearLayout buttonsCont = ViewBindings.findChildViewById(rootView, id);
      if (buttonsCont == null) {
        break missingId;
      }

      id = R.id.connStatus;
      AppCompatTextView connStatus = ViewBindings.findChildViewById(rootView, id);
      if (connStatus == null) {
        break missingId;
      }

      id = R.id.connection_status_parent;
      ConstraintLayout connectionStatusParent = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatusParent == null) {
        break missingId;
      }

      id = R.id.high_speed_switch;
      SwitchCompat highSpeedSwitch = ViewBindings.findChildViewById(rootView, id);
      if (highSpeedSwitch == null) {
        break missingId;
      }

      id = R.id.indicator_con;
      AppCompatImageView indicatorCon = ViewBindings.findChildViewById(rootView, id);
      if (indicatorCon == null) {
        break missingId;
      }

      id = R.id.joysticksNormal;
      LinearLayoutCompat joysticksNormal = ViewBindings.findChildViewById(rootView, id);
      if (joysticksNormal == null) {
        break missingId;
      }

      id = R.id.joysticksTank;
      LinearLayoutCompat joysticksTank = ViewBindings.findChildViewById(rootView, id);
      if (joysticksTank == null) {
        break missingId;
      }

      id = R.id.led_switch;
      SwitchCompat ledSwitch = ViewBindings.findChildViewById(rootView, id);
      if (ledSwitch == null) {
        break missingId;
      }

      id = R.id.restartButton;
      ImageButton restartButton = ViewBindings.findChildViewById(rootView, id);
      if (restartButton == null) {
        break missingId;
      }

      id = R.id.reverse_switch;
      SwitchCompat reverseSwitch = ViewBindings.findChildViewById(rootView, id);
      if (reverseSwitch == null) {
        break missingId;
      }

      id = R.id.slider_dir;
      AppCompatSeekBar sliderDir = ViewBindings.findChildViewById(rootView, id);
      if (sliderDir == null) {
        break missingId;
      }

      id = R.id.sliderLeft;
      AppCompatSeekBar sliderLeft = ViewBindings.findChildViewById(rootView, id);
      if (sliderLeft == null) {
        break missingId;
      }

      id = R.id.slider_motor;
      AppCompatSeekBar sliderMotor = ViewBindings.findChildViewById(rootView, id);
      if (sliderMotor == null) {
        break missingId;
      }

      id = R.id.sliderRight;
      AppCompatSeekBar sliderRight = ViewBindings.findChildViewById(rootView, id);
      if (sliderRight == null) {
        break missingId;
      }

      id = R.id.tankModeSwitch;
      SwitchCompat tankModeSwitch = ViewBindings.findChildViewById(rootView, id);
      if (tankModeSwitch == null) {
        break missingId;
      }

      return new FragmentControllerBinding((ConstraintLayout) rootView, buttonsCont, connStatus,
          connectionStatusParent, highSpeedSwitch, indicatorCon, joysticksNormal, joysticksTank,
          ledSwitch, restartButton, reverseSwitch, sliderDir, sliderLeft, sliderMotor, sliderRight,
          tankModeSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
